import { colors } from "@/constants/theme";
import React from "react";
import { View } from "react-native";
import Svg, { Path, G, Defs, ClipPath, Rect } from "react-native-svg";

interface TabIconProps {
  name: "home" | "diagnose" | "camera" | "garden" | "profile";
  color: string;
  size?: number;
}

const TabIcon: React.FC<TabIconProps> = ({ name, color, size = 24 }) => {
  const getPath = () => {
    switch (name) {
      case "home":
        return "M6.50081 3.04205H18.5085C18.442 2.22912 17.9489 1.78571 17.0384 1.78571H7.96146C7.06041 1.78571 6.55772 2.22912 6.50081 3.04205ZM4.56593 5.71179H20.4434C20.3105 4.83419 19.8553 4.33535 18.8499 4.33535H6.15936C5.15398 4.33535 4.69871 4.83419 4.56593 5.71179ZM5.68513 22.3214H19.3147C21.2875 22.3214 22.3213 21.3238 22.3213 19.4207V10.1182C22.3213 8.21524 21.2875 7.21756 19.3147 7.21756H5.68513C3.70282 7.21756 2.67847 8.206 2.67847 10.1182V19.4207C2.67847 21.3238 3.70282 22.3214 5.68513 22.3214Z";
      case "diagnose":
        return "M21.0126 4.19998C20.9584 4.20414 15.4209 4.67914 12.7876 2.19998C12.6293 2.04581 12.3793 2.04581 12.2168 2.19998C9.58343 4.67914 4.0501 4.20414 3.99176 4.19998C3.8751 4.18748 3.7626 4.22914 3.6751 4.30831C3.5876 4.38748 3.5376 4.49581 3.5376 4.61248V8.47498C3.5376 21.3791 12.3501 22.9 12.4376 22.9125C12.4584 22.9166 12.4834 22.9166 12.5043 22.9166C12.5251 22.9166 12.5459 22.9166 12.5668 22.9125C12.6543 22.9 21.4668 21.3791 21.4668 8.47498V4.61248C21.4668 4.49581 21.4168 4.38748 21.3334 4.30831C21.2459 4.22914 21.1293 4.18748 21.0126 4.19998V4.19998ZM16.9543 13.5583C16.9543 13.7875 16.7668 13.975 16.5376 13.975H13.9709V16.5416C13.9709 16.7708 13.7834 16.9583 13.5543 16.9583H11.4459C11.2168 16.9583 11.0293 16.7708 11.0293 16.5416V13.975H8.4626C8.23343 13.975 8.04593 13.7875 8.04593 13.5583V11.45C8.04593 11.2208 8.23343 11.0333 8.4626 11.0333H11.0293V8.46664C11.0293 8.23748 11.2168 8.04998 11.4459 8.04998H13.5543C13.7834 8.04998 13.9709 8.23748 13.9709 8.46664V11.0333H16.5376C16.7668 11.0333 16.9543 11.2208 16.9543 11.45V13.5583Z";
      case "camera":
        return "M23.468 11.6519C23.9144 11.6519 24.2775 12.0169 24.2776 12.4673C24.2776 12.9168 23.9144 13.2808 23.468 13.2808H22.3391V17.1656C22.3389 19.5175 20.4398 21.4283 18.1057 21.4283H16.4124C15.965 21.4281 15.6028 21.0633 15.6028 20.6129C15.6029 20.1636 15.9651 19.7985 16.4124 19.7984H18.1057C19.548 19.7984 20.7218 18.6186 20.7219 17.1656V13.2808H17.9338V14.3629C17.9444 15.7165 16.8653 16.8227 15.5208 16.8355H9.64966C8.30618 16.8227 7.22701 15.7165 7.23755 14.3629V13.2808H4.44946V17.1695C4.44946 18.6173 5.61972 19.7953 7.05786 19.7974L8.78833 19.7984C9.23463 19.7984 9.59677 20.1636 9.59692 20.6129C9.59586 21.0633 9.23477 21.4282 8.78735 21.4283L7.05591 21.4273C4.72704 21.4252 2.83032 19.5152 2.83032 17.1695V13.2808H1.70239C1.25615 13.2806 0.892822 12.9167 0.892822 12.4673C0.892924 12.0171 1.25621 11.6521 1.70239 11.6519H23.468ZM15.5208 5.86969C16.1638 5.86969 16.7821 6.12997 17.2317 6.59332C17.6844 7.06095 17.9349 7.68953 17.9338 8.34332V9.70172C17.9285 9.86117 17.8022 9.99139 17.6438 9.99567H7.52466C7.36742 9.99023 7.24074 9.86004 7.23755 9.70172V8.34332C7.22586 6.98965 8.30612 5.8836 9.64966 5.86969H15.5208ZM8.78735 1.78571C9.23378 1.78571 9.59692 2.15062 9.59692 2.60114C9.59692 3.05057 9.23484 3.41559 8.78735 3.41559L7.05591 3.41656C5.61905 3.41888 4.44958 4.59686 4.44946 6.04449V8.07379C4.44937 8.52315 4.08626 8.88922 3.63989 8.88922C3.19357 8.88917 2.83139 8.52312 2.8313 8.07379V6.04449C2.83141 3.69901 4.72624 1.78895 7.05493 1.78668L8.78638 1.78571H8.78735ZM18.1047 1.78571C20.44 1.78571 22.3391 3.69739 22.3391 6.0484V8.07379C22.3391 8.52323 21.977 8.88922 21.5295 8.88922C21.0833 8.88899 20.7209 8.52309 20.7209 8.07379V6.0484C20.7209 4.59627 19.5471 3.41461 18.1047 3.41461H16.4124C15.9659 3.41461 15.6028 3.05058 15.6028 2.60114C15.6029 2.15075 15.966 1.78571 16.4124 1.78571H18.1047Z";
      case "garden":
        return "M13.5209 1.59392C13.8281 1.16383 14.4483 1.13727 14.7943 1.51384L14.8598 1.59489L20.5854 9.62224C23.1469 13.212 22.2305 18.1822 18.6039 20.6447L18.4076 20.7736L18.2065 20.8976C17.2134 21.4874 16.1216 21.8408 15.0111 21.9572V24.1799C15.0111 24.6326 14.6436 25.0002 14.1899 25.0002C13.7686 25.0001 13.4219 24.6833 13.3744 24.2756L13.3686 24.1799L13.3676 21.9572C12.2572 21.8408 11.1663 21.4873 10.1733 20.8976C6.29828 18.5948 5.17094 13.5309 7.65958 9.81657L7.79337 9.62224L13.5209 1.59392ZM23.0522 18.3273C23.1434 17.8839 23.5775 17.5977 24.0219 17.6886C24.4662 17.7796 24.7524 18.213 24.6615 18.6564C24.4713 19.5819 24.0353 20.3784 23.432 21.0461C22.9393 21.5913 22.443 21.9484 22.0844 22.1379C21.6835 22.3495 21.1863 22.1971 20.974 21.797C20.7769 21.4255 20.8949 20.9711 21.2338 20.7384L21.4369 20.6144L21.5697 20.5236C21.7878 20.3664 22.0072 20.1734 22.2113 19.9474C22.6292 19.4849 22.9249 18.9463 23.0522 18.3273ZM14.1899 8.39861C13.7688 8.39868 13.4221 8.71477 13.3744 9.12224L13.3686 9.21794V12.3244L12.1205 11.0519L12.0443 10.9826C11.7248 10.729 11.2588 10.747 10.9594 11.0392C10.66 11.3315 10.6323 11.796 10.8793 12.1203L10.9467 12.1984L13.308 14.6076L13.3686 14.6623V18.4416L13.3744 18.5373C13.422 18.9448 13.7687 19.2608 14.1899 19.2609C14.5788 19.2609 14.9045 18.9913 14.9897 18.6291L15.0063 18.5373L15.0102 18.4562L17.7836 15.4806L17.849 15.4015C18.0877 15.0712 18.0481 14.6071 17.7416 14.3224C17.4349 14.0378 16.9677 14.0315 16.6547 14.2931L16.5805 14.3644L15.0111 16.047V9.21794L15.0063 9.12224C14.9586 8.71468 14.611 8.39861 14.1899 8.39861ZM5.30118 7.09392C5.62871 6.78087 6.14841 6.79174 6.46231 7.11833C6.75205 7.42014 6.76468 7.88614 6.50723 8.20232L6.31583 8.40935L6.18497 8.5656C5.97062 8.83118 5.75422 9.14843 5.55118 9.51482C5.2644 10.0323 5.02977 10.6026 4.86661 11.2238C4.75158 11.6618 4.30256 11.9235 3.86368 11.8088C3.42477 11.694 3.16173 11.2458 3.27677 10.8078C3.47576 10.0502 3.76196 9.35379 4.1127 8.72087C4.54514 7.94055 4.98572 7.3955 5.30118 7.09392Z";
      case "profile":
        return "M12.9521 11.772C15.3362 11.772 17.4084 9.7698 17.4084 7.16274C17.4084 4.58696 15.3362 2.67859 12.9521 2.67859C10.568 2.67859 8.49578 4.62867 8.49578 7.18359C8.49578 9.7698 10.5568 11.772 12.9521 11.772ZM5.47661 21.4286H20.4165C21.6085 21.4286 22.3215 20.9072 22.3215 20.0416C22.3215 17.3511 18.723 13.6387 12.941 13.6387C7.17002 13.6387 3.57153 17.3511 3.57153 20.0416C3.57153 20.9072 4.28455 21.4286 5.47661 21.4286Z";
      default:
        return "";
    }
  };

  // Special case for camera tab which has a different background
  if (name === "camera") {
    return (
      <View
        style={{
          backgroundColor: colors.background.lightGreen2,
          width: size,
          height: size,
          borderRadius: size / 2,
          justifyContent: "center",
          alignItems: "center",
          marginTop: -size / 2,
        }}
      >
        <View
          style={{
            width: size - 8,
            height: size - 8,
            borderRadius: size / 2,
            backgroundColor: colors.primary.green,
            justifyContent: "center",
            alignItems: "center",
          }}
        >
          <Svg width={25} height={25} viewBox="0 0 25 25">
            <Path d={getPath()} fill="white" />
          </Svg>
        </View>
      </View>
    );
  }

  // Special case for garden tab which needs a clip path
  if (name === "garden") {
    return (
      <Svg width={size} height={size} viewBox="0 0 25 25">
        <G clipPath="url(#clip0)">
          <G clipPath="url(#clip1)">
            <Path d={getPath()} fill={color} />
          </G>
        </G>
        <Defs>
          <ClipPath id="clip0">
            <Rect width="25" height="25" fill="white" />
          </ClipPath>
          <ClipPath id="clip1">
            <Rect
              width="25"
              height="25"
              fill="white"
              transform="translate(2)"
            />
          </ClipPath>
        </Defs>
      </Svg>
    );
  }

  return (
    <Svg width={size} height={size} viewBox="0 0 25 25">
      <Path d={getPath()} fill={color} />
    </Svg>
  );
};

export default TabIcon;